name: Build, Test, and Deploy Spring Boot Application with Docker on EC2

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build Docker image
        run: docker build -t myproject1-app:latest .

      - name: Tag Docker image
        run: docker tag myproject1-app:latest 600627348552.dkr.ecr.us-east-1.amazonaws.com/myproject1-app-repo:latest

      - name: Log in to AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 600627348552.dkr.ecr.us-east-1.amazonaws.com

      - name: Push Docker image to AWS ECR
        run: docker push 600627348552.dkr.ecr.us-east-1.amazonaws.com/myproject1-app-repo:latest

      # SSH vào EC2 và triển khai Docker container
      - name: Deploy Docker container on EC2
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Cập nhật hệ thống và cài đặt Docker nếu chưa có
            sudo yum update -y
            sudo amazon-linux-extras install docker -y
            sudo service docker start
            sudo usermod -a -G docker ec2-user

            # Kích hoạt nhóm docker ngay lập tức trong session này
            newgrp docker

            # Cài đặt Docker Compose (nếu chưa có)
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

            # Đăng nhập vào ECR
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 600627348552.dkr.ecr.us-east-1.amazonaws.com

            # Tạo file docker-compose.yml trên EC2 để khởi động MySQL và ứng dụng Spring Boot
            cat <<EOF > docker-compose.yml
            version: '3.8'

            services:
              db:
                image: mysql:8.0
                container_name: myproject-mysql
                environment:
                  MYSQL_ROOT_PASSWORD: MySecurePass2702
                  MYSQL_DATABASE: myprojectdb
                ports:
                  - "3306:3306"
                networks:
                  - myproject-network
                volumes:
                  - my_db_data:/var/lib/mysql
                healthcheck:
                  test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
                  interval: 10s
                  retries: 5

              app:
                image: 600627348552.dkr.ecr.us-east-1.amazonaws.com/myproject1-app-repo:latest
                container_name: myproject1-container
                environment:
                  SPRING_DATASOURCE_URL: jdbc:mysql://myproject-mysql:3306/myprojectdb
                  SPRING_DATASOURCE_USERNAME: root
                  SPRING_DATASOURCE_PASSWORD: MySecurePass2702
                ports:
                  - "8080:8080"
                depends_on:
                  db:
                    condition: service_healthy
                networks:
                  - myproject-network

            networks:
              myproject-network:
                driver: bridge

            volumes:
              my_db_data:
            EOF

            # Chạy Docker Compose để khởi động MySQL và ứng dụng Spring Boot
            sudo docker-compose up -d

            # Đợi MySQL và ứng dụng Spring Boot khởi động
            echo "Waiting for MySQL and Spring Boot to be ready..."
            sleep 60

            # Kiểm tra container đang chạy
            docker ps -a

            # Kiểm tra logs của Spring Boot container
            docker logs myproject1-container || echo "Failed to retrieve Spring Boot logs"

            # Chạy health check trên ứng dụng Spring Boot bằng IP công cộng của EC2
            curl -v http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4):8080/actuator/health || echo "Health check failed"
