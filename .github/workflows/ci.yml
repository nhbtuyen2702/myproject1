# Tên của workflow này để dễ nhận diện
name: Build, Test, and Deploy Spring Boot Application with Docker Compose

# Kích hoạt workflow khi có sự kiện push hoặc pull request lên nhánh master
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out mã nguồn từ repository
      - name: Check out code
        uses: actions/checkout@v4

      # 2. Thiết lập JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Build ứng dụng với Maven
      - name: Build with Maven
        run: |
          echo "Building the project using Maven..."
          mvn clean install
          echo "Maven build completed."

      # 4. Đăng nhập Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 5. Build Docker image
      - name: Build Docker Image
        run: |
          echo "Building Docker image..."
          docker build -t myproject1-app:latest .
          echo "Docker image build completed."

      # 6. Liệt kê Docker image
      - name: List Docker Images
        run: |
          echo "Listing Docker images to verify build..."
          docker images

      # 7. Tag và push Docker image lên Docker Hub
      - name: Tag and Push Docker Image
        run: |
          echo "Tagging Docker image: myproject1-app:latest..."
          docker tag myproject1-app:latest ${{ secrets.DOCKER_USERNAME }}/myproject1:latest
          echo "Pushing Docker image to Docker Hub..."
          docker push ${{ secrets.DOCKER_USERNAME }}/myproject1:latest
          echo "Docker image pushed successfully."

      # 8. Cài đặt Docker Compose
      - name: Install Docker Compose
        run: |
          echo "Installing Docker Compose..."
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version  # Xác nhận Docker Compose đã được cài đặt
          echo "Docker Compose installed."

      # 9. Thiết lập Docker Compose
      - name: Set up Docker Compose
        run: |
          echo "Starting Docker Compose with docker-compose.yml..."
          docker-compose -f docker-compose.yml up -d --build
          echo "Docker Compose started."

      # 10. Kiểm tra trạng thái của tất cả container
      - name: Check Running Docker Containers
        run: |
          echo "Listing all running Docker containers..."
          docker ps -a  # Liệt kê tất cả các container để kiểm tra trạng thái
          echo "Container status checked."

      # 11. Kiểm tra log của tất cả các container (bao gồm cả MySQL và Spring Boot)
      - name: Check All Container Logs
        run: |
          echo "Checking logs of all containers..."
          docker logs myproject1-app --details --timestamps || echo "Failed to retrieve Spring Boot logs"
          docker logs myproject-mysql --details --timestamps || echo "Failed to retrieve MySQL logs"
          echo "All container logs checked."

      # 12. Hiển thị thông tin chi tiết các container (để debug trạng thái)
      - name: Inspect Docker Containers
        run: |
          echo "Inspecting all containers for additional details..."
          docker inspect myproject1-app || echo "Failed to inspect Spring Boot container"
          docker inspect myproject-mysql || echo "Failed to inspect MySQL container"
          echo "Inspection completed."

      # 13. Chạy kiểm tra sức khỏe (health check) của ứng dụng với debug
      - name: Run Health Check
        run: |
          echo "Waiting for the application to be ready..."
          sleep 120  # Đợi thêm thời gian để ứng dụng Spring Boot khởi động (tăng từ 60s lên 120s)
          echo "Running health check on the application..."
          curl -v http://localhost:8080/actuator/health || echo "Health check failed"
          echo "Health check completed."
